CSS selectors are patterns used to select and style HTML elements.

Syntax:
selector {
    property: value;
}


Basic Selectors:

* `*` — Universal selector (selects all elements)
* `element` — Type selector (for example, `div`, `p`, `h1`)
* `#id` — ID selector (for example, `#header`)
* `.class` — Class selector (for example, `.menu`)
* `[attribute]` — Attribute selector (for example, `[type="text"]`)

---

**Combinator Selectors**

* `A B` — Descendant selector (selects element `B` inside element `A`)
* `A > B` — Child selector (selects direct child `B` of `A`)
* `A + B` — Adjacent sibling selector (selects `B` immediately after `A`)
* `A ~ B` — General sibling selector (selects all `B` siblings after `A`)

---

**Group Selector**

* `A, B` — Groups multiple selectors together (for example, `h1, h2, h3`)

---

**Attribute Selectors**

* `[attr]` — Selects elements with the given attribute
* `[attr="value"]` — Selects elements with an exact attribute value
* `[attr~="value"]` — Selects elements whose attribute contains the word
* `[attr^="value"]` — Selects elements whose attribute starts with a specific value
* `[attr$="value"]` — Selects elements whose attribute ends with a specific value
* `[attr*="value"]` — Selects elements whose attribute contains a specific substring

---

**Pseudo-classes**

* `:hover` — When the mouse pointer is over the element
* `:active` — When the element is being activated or clicked
* `:focus` — When the element is focused
* `:visited` — For visited links
* `:first-child` — Selects the first child of a parent
* `:last-child` — Selects the last child of a parent
* `:nth-child(n)` — Selects the nth child (for example, `:nth-child(2)`)
* `:nth-of-type(n)` — Selects the nth element of its type

---

**Pseudo-elements**

* `::before` — Inserts content before an element
* `::after` — Inserts content after an element
* `::first-letter` — Styles the first letter of an element
* `::first-line` — Styles the first line of text
* `::selection` — Styles the portion of text selected by the user
* `::placeholder` — Styles the placeholder text inside input fields

---

**UI Element States (CSS3)**

* `:valid` and `:invalid` — Represent form validation states
* `:in-range` and `:out-of-range` — Represent input range validation states
* `:read-only` and `:read-write` — Represent input field states

---

**Logical Combinations (CSS4+)**

* `:is()` — Matches any of the selectors inside the parentheses
* `:where()` — Works like `:is()` but does not add specificity
* `:has()` — Selects elements that contain a specific child (limited browser support)
